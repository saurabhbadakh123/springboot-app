name: my-CD-pipeline
trigger: none

resources:
  pipelines:
    - pipeline: buildPipeline
      source: Web_Application
      trigger: none

variables:
  acrName: 'myacrrepo7066'
  imageName: 'springboot-app'
  manifestFile: 'springboot-app-main/aks-deploy-from-acr.yaml'  # Your manifest path

pool:
  vmImage: 'ubuntu-latest'

steps:
1. Checkout & Setup:
   - checkout: self
   - task: AzureCLI@2
     displayName: 'Connect to AKS'
     inputs:
       azureSubscription: 'serviceconnection-azurecli'
       scriptType: 'bash'
       inlineScript: |
         az aks get-credentials -g myResourceGroup -n myAKSCluster
         az aks update -g myResourceGroup -n myAKSCluster --attach-acr ${{ variables.acrName }}

2. Update & Deploy:
   - script: |
       # Get latest existing tag (e.g. 223)
       LATEST_TAG=$(az acr repository show-tags \
         --name ${{ variables.acrName }} \
         --repository ${{ variables.imageName }} \
         --orderby time_desc \
         --top 1 \
         --output tsv)

       # Update manifest with REAL tag
       sed -i "s#__IMAGE_TAG__#$LATEST_TAG#g" ${{ variables.manifestFile }}
       echo "âœ… Using verified image: $LATEST_TAG"
     displayName: 'Update Image Tag'

   - task: Kubernetes@1
     displayName: 'Apply Deployment'
     inputs:
       connectionType: 'Azure Resource Manager'
       azureSubscriptionEndpoint: 'serviceconnection-azurecli'
       azureResourceGroup: 'myResourceGroup'
       kubernetesCluster: 'myAKSCluster'
       command: 'apply'
       useConfigurationFile: true
       configuration: ${{ variables.manifestFile }}

3. Verify:
   - script: |
       kubectl rollout status deployment/my-springboot-deployment --timeout=300s
       kubectl get pods -l app=springboot-app
     displayName: 'Verify Deployment'
