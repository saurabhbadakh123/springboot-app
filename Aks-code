name: my-CD-pipeline

trigger: none

resources:
  pipelines:
    - pipeline: buildPipeline
      source: 'Web_Application'
      trigger:
        branches:
          include:
            - main

variables:
  imageName: 'springboot-app'
  tag: '$(Build.BuildId)'
  acrLoginServer: 'myacrrepo7066.azurecr.io'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Deploy
    displayName: 'Deploy to AKS'
    jobs:
      - job: Deploy
        displayName: 'Deploy Spring Boot App to AKS'
        steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: 'Set AKS Context'
            inputs:
              azureSubscription: 'serviceconnection-azurecli'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az aks get-credentials --resource-group myResourceGroup --name myAKSCluster --overwrite-existing
                az aks update -n myAKSCluster -g myResourceGroup --attach-acr myacrrepo7066

          - script: |
              sed -i "s#__IMAGE_TAG__#$(tag)#g" springboot-app-main/aks-deploy-from-acr.yaml
              echo "Using Image: $(acrLoginServer)/$(imageName):$(tag)"
            displayName: 'Update Image Tag in Manifest'

          - task: Kubernetes@1
            displayName: 'Apply Deployment'
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'serviceconnection-azurecli'
              azureResourceGroup: 'myResourceGroup'
              kubernetesCluster: 'myAKSCluster'
              command: 'apply'
              useConfigurationFile: true
              configuration: 'springboot-app-main/aks-deploy-from-acr.yaml'
