steps:
# 1. Build Java application
- task: Maven@3
  inputs:
    mavenPomFile: 'springboot-app-main/pom.xml'
    goals: 'package'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
  displayName: 'Build Spring Boot App'

# 2. Verify JAR exists
- script: |
    echo "--- Checking JAR file location ---"
    find . -name "*.jar" -exec ls -la {} \;
    JAR_PATH=$(find . -name "*.jar" | head -1)
    echo "##vso[task.setvariable variable=JAR_PATH]$JAR_PATH"
    echo "Found JAR at: $JAR_PATH"
  displayName: 'Locate JAR File'

# 3. Build Docker image (directly using found JAR path)
- script: |
    echo "--- Building Docker image ---"
    echo "Using JAR from: $(JAR_PATH)"
    docker build \
      -t $(acrLoginServer)/$(imageRepository):$(tag) \
      --build-arg JAR_FILE=$(JAR_PATH) \
      -f springboot-app-main/Dockerfile \
      springboot-app-main/
    
    echo "--- Pushing to ACR ---"
    docker push $(acrLoginServer)/$(imageRepository):$(tag)
  displayName: 'Build and Push Docker Image'

# Must use this exact Dockerfile
FROM eclipse-temurin:17-jdk
ARG JAR_FILE
WORKDIR /app
COPY ${JAR_FILE} app.jar
ENTRYPOINT ["java", "-jar", "app.jar"]
